{"version":3,"sources":["components/image.js","components/Fetchdata.js","components/Fetchdata2.js","containers/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Image","props","Style","display","Display","className","src","Imageurl","alt","style","require","config","mic","window","SpeechRecognition","webkitSpeechRecognition","continuous","interimResults","lang","Fetchdata","useState","setImageurl","setDisplay","fetchWeather","a","h1","document","querySelector","console","log","note","fetch","process","then","res","innerText","json","data","span1","span2","span3","span4","span5","span6","k","weather","main","description","headers","Authorization","resp","photos","medium","catch","err","innerHTML","temp","toPrecision","temp_max","temp_min","coord","lon","lat","e","color","isListening","setIsListening","setNote","useEffect","handleListen","start","stop","onend","onstart","onresult","event","transcript","Array","from","results","map","result","join","onerror","error","id","class","onClick","prevState","value","Fetchdata2","input","Home","mode","setMode","setVoice","setText","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dddd61d0.chunk.js","sourcesContent":["import React from 'react';\r\nconst Image=(props)=>{\r\n   const Style={\r\n     display: `${props.Display}`\r\n   };\r\n    return(\r\n    <div className=\"img\">\r\n     <img className=\"image\" src={props.Imageurl} alt=\"imag\" style={Style} />\r\n    </div>\r\n)\r\n}\r\nexport default Image;","import React, { useState, useEffect } from 'react'\r\nimport Image from './image.js';\r\nimport '../App.css';\r\nrequire('dotenv').config();\r\nconst SpeechRecognition =\r\n  window.SpeechRecognition || window.webkitSpeechRecognition\r\nconst mic = new SpeechRecognition()\r\nmic.continuous = true\r\nmic.interimResults = true\r\nmic.lang = 'en-US'\r\n\r\nexport const Fetchdata = () => {\r\n  const [Imageurl,setImageurl]=useState(\"\");\r\n  const [display,setDisplay]=useState(\"none\");\r\n    const fetchWeather = async () => {\r\n            // const input = document.querySelector('.input');\r\n            const h1 = document.querySelector('#hd1');\r\n            console.log(note);\r\n            fetch(`https://api.openweathermap.org/data/2.5/weather?q=${note}&appid=${process.env.REACT_APP_WEATHER_API_KEY}`)\r\n                .then((res) => {\r\n                    h1.innerText = \"Speak City Name :-\";\r\n                    return res.json();\r\n                })\r\n                .then((data) => {\r\n                    const span1 = document.querySelector('#span1');\r\n                    const span2 = document.querySelector('#span2');\r\n                    const span3 = document.querySelector('#span3');\r\n                    const span4 = document.querySelector('#span4');\r\n                    const span5 = document.querySelector('#span5');\r\n                    const span6 = document.querySelector('#span6');\r\n                    let k= data.weather[0].main;\r\n                    if(k===\"Clear\")\r\n                    {\r\n                      k=data.weather[0].description;\r\n                    }\r\n                    const promise =fetch(`https://api.pexels.com/v1/search?query=${k}`,{\r\n                    headers: {\r\n                    Authorization: process.env.REACT_APP_IMAGE_API_KEY,\r\n                    }\r\n                    })\r\n                    promise.then(resp => {\r\n                    return resp.json();\r\n                    })\r\n                    .then(data => {\r\n                    console.log(data)\r\n                    if(k ===\"clear sky\")\r\n                    { setDisplay(\"inline\");\r\n                      setImageurl(data.photos[1].src.medium);\r\n                    }\r\n                    else if(k ===\"Rain\"){\r\n                      setDisplay(\"inline\");\r\n                      setImageurl(data.photos[5].src.medium);\r\n                    }\r\n                    else{\r\n                    setDisplay(\"inline\");\r\n                    setImageurl(data.photos[2].src.medium);\r\n                    }})\r\n                    .catch(err=>{\r\n                      console.log(err);\r\n                    })                           \r\n                    span1.innerHTML = `Weather: ${data.weather[0].description}`;\r\n                    span2.innerHTML = `Temperature: &nbsp Avg: ${((data.main.temp)-273).toPrecision(4)}\\xB0C`;\r\n                    span3.innerHTML= `&nbsp Max: ${(data.main.temp_max - 273).toPrecision(4)}\\xB0C`;\r\n                    span4.innerHTML=`&nbsp Min: ${(data.main.temp_min - 273).toPrecision(4)}\\xB0C`;\r\n                    span5.innerHTML = `Coordinates: &nbsp Long: ${(data.coord.lon).toPrecision(4)}`\r\n                    span6.innerHTML = `&nbsp Lat: ${(data.coord.lat).toPrecision(4)}`;\r\n                })\r\n                .catch((e) => {\r\n        \r\n                    h1.innerText = \"Error !!\";\r\n                    h1.style.color = 'red';\r\n                })\r\n        }\r\n\r\n  const [isListening, setIsListening] = useState(false)\r\n  const [note, setNote] = useState(null)\r\n\r\n  useEffect(() => {\r\n    handleListen()\r\n  }, [isListening])\r\n\r\n  const handleListen = () => {\r\n    if (isListening) {\r\n      mic.start()\r\n      // mic.onend = () => {\r\n      //   console.log('continue..')\r\n      //   mic.start()\r\n      // }\r\n    } else {\r\n      mic.stop()\r\n      mic.onend = () => {\r\n        console.log('Stopped Mic on Click')\r\n      }\r\n    }\r\n    mic.onstart = () => {\r\n      console.log('Mics on')\r\n    }\r\n\r\n    mic.onresult = event => {\r\n      const transcript = Array.from(event.results)\r\n        .map(result => result[0])\r\n        .map(result => result.transcript)\r\n        .join('')\r\n      console.log(transcript)\r\n      setNote(transcript)\r\n      mic.onerror = event => {\r\n        console.log(event.error)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      \r\n      <div className=\"container\">\r\n        <div className=\"box\">  \r\n          {isListening ? <span id=\"span\"><i class=\"fas fa-microphone\"></i></span> : <span id=\"span\"><i class=\"fas fa-microphone-slash\"></i></span>}      \r\n          <button className=\"imgtext\" onClick={() => setIsListening(prevState => !prevState)}>\r\n            Start/Stop\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div>\r\n      <h1 id=\"hd1\">Speak City Name :-</h1>\r\n      <input className=\"input\" value={note}></input> \r\n      <button className=\"button\" onClick={fetchWeather}>Search</button>\r\n      </div>\r\n      <br/>\r\n      <br/>\r\n      <div id=\"imagetext\">\r\n      <Image Imageurl={Imageurl} Display={display} />\r\n      <div className=\"imagetext\">\r\n      <h4 id=\"hd4\"><span id=\"span1\"></span></h4>\r\n      <ul id=\"list\"><li id=\"span2\"></li><li id=\"span3\"></li><li id=\"span4\"></li></ul>\r\n      <br/>\r\n      <ul id=\"list1\"><li id=\"span5\"></li><li id=\"span6\"></li></ul>\r\n      </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React,{useState} from 'react';\r\nimport Image from './image.js';\r\nexport const Fetchdata2 = () => {\r\n    const [Imageurl,setImageurl]=useState(\"\");\r\n    const [display,setDisplay]=useState(\"none\");\r\n    const fetchWeather = async () => {\r\n        const input = document.querySelector('.input');\r\n        const h1 = document.querySelector('#hd1');\r\n\r\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${input.value}&appid=${process.env.REACT_APP_WEATHER_API_KEY}`)\r\n            .then((res) => {\r\n                h1.innerText = \"Enter City Name :-\";\r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                const span1 = document.querySelector('#span1');\r\n                const span2 = document.querySelector('#span2');\r\n                const span3 = document.querySelector('#span3');\r\n                const span4 = document.querySelector('#span4');\r\n                const span5 = document.querySelector('#span5');\r\n                const span6 = document.querySelector('#span6');\r\n                let k =data.weather[0].main;\r\n                if(k===\"Clear\")\r\n                {\r\n                  k=data.weather[0].description;\r\n                }\r\n                const promise =fetch(`https://api.pexels.com/v1/search?query=${k}`,{\r\n                headers: {\r\n                Authorization: process.env.REACT_APP_IMAGE_API_KEY,\r\n                }\r\n                })\r\n                promise.then(resp => {\r\n                return resp.json();\r\n                })\r\n                .then(data => {\r\n                console.log(data)\r\n                if(k===\"clear sky\")\r\n                {setDisplay(\"inline\");\r\n                setImageurl(data.photos[1].src.medium);\r\n                }\r\n                else{\r\n                    setDisplay(\"inline\");\r\n                setImageurl(data.photos[2].src.medium);\r\n                }\r\n                })\r\n                .catch(err=>{\r\n                console.log(err);\r\n                }) \r\n                span1.innerHTML = `Weather: ${data.weather[0].description}`;\r\n                span2.innerHTML = `Temperature: &nbsp Avg: ${((data.main.temp)-273).toPrecision(4)}\\xB0C`;\r\n                span3.innerHTML= `&nbsp Max: ${(data.main.temp_max - 273).toPrecision(4)}\\xB0C`;\r\n                span4.innerHTML=`&nbsp Min: ${(data.main.temp_min - 273).toPrecision(4)}\\xB0C`;\r\n                span5.innerHTML = `Coordinates: &nbsp Long: ${(data.coord.lon).toPrecision(4)}`\r\n                span6.innerHTML = `&nbsp Lat: ${(data.coord.lat).toPrecision(4)}`;\r\n            })\r\n            .catch((e) => {\r\n\r\n                h1.innerText = \"Error !!\";\r\n                h1.style.color = 'red';\r\n            })\r\n    }\r\n    return (\r\n        <>      \r\n      <div>\r\n      <h1 id=\"hd1\">Enter City Name :-</h1> \r\n      <input className=\"input\"></input> \r\n      <button className=\"button\" onClick={fetchWeather}>Search</button>\r\n      </div>\r\n      <br/>\r\n      <br/>\r\n      <div id=\"imagetext\">\r\n      <Image Imageurl={Imageurl} Display={display} />\r\n      <div className=\"textimage\">\r\n      <h4 id=\"hd4\"><span id=\"span1\"></span></h4>\r\n      <ul id=\"listt\"><li id=\"span2\"></li><li id=\"span3\"></li><li id=\"span4\"></li></ul>\r\n      <br/>\r\n      <ul id=\"list1\"><li id=\"span5\"></li><li id=\"span6\"></li></ul>\r\n      </div>\r\n      </div>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport { Fetchdata } from '../components/Fetchdata';\r\nimport { Fetchdata2 } from '../components/Fetchdata2';\r\nimport { useState } from 'react';\r\n\r\nexport const Home = () => {\r\n\r\n    const [mode, setMode] = useState(\"\");\r\n\r\n    const setVoice = () => {\r\n        setMode(\"voice\");\r\n    }\r\n    const setText = () => {\r\n        setMode(\"text\");\r\n    }\r\n    console.log(mode);\r\n    if (mode === \"voice\") {\r\n        return (\r\n            <>\r\n                <button className=\"button\" onClick={setVoice}>Voice</button>\r\n                <button className=\"button\" onClick={setText}>Text</button>\r\n                <br/><br/>\r\n                <Fetchdata />\r\n            </>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <>\r\n                <button className=\"button\" onClick={setVoice}>Voice</button>\r\n                <button className=\"button\" onClick={setText}>Text</button>\r\n                <br/>\r\n                <Fetchdata2 />\r\n            </>\r\n        )\r\n    }\r\n}","import './App.css';\nimport {Home} from './containers/Home.js';\n\nfunction App() {\n\n  return(\n    <>\n    <div id=\"App\">\n      <h1 className=\"heading1\">Weather App</h1>\n      <Home />\n      </div>\n    </>\n  )\n}\n//62747048-d8dc-42d6-9058-edb09bdc05ff\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}